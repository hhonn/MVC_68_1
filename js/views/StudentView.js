class StudentView {
    /* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
       - {string} message - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
       - {string} type - ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó (success, error, warning)
    */
    showAlert(message, type = 'success') {
        const alertContainer = document.getElementById('alert-container');
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type}`;
        alertDiv.textContent = message;

        alertContainer.innerHTML = '';
        alertContainer.appendChild(alertDiv);

        setTimeout(() => {
            alertDiv.remove();
        }, 5000);
    }

    /* ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö */

    showLogin() {
        document.getElementById('auth-section').classList.remove('hidden');
        document.getElementById('main-content').classList.add('hidden');
    }

    /* ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
       - {Object} user - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
       - {boolean} isAdmin - ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
     */

    showMainContent(user, isAdmin = false) {
        document.getElementById('auth-section').classList.add('hidden');
        document.getElementById('main-content').classList.remove('hidden');

        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        const userInfoDiv = document.getElementById('user-info');
        userInfoDiv.classList.remove('hidden');

        if (isAdmin) {
            userInfoDiv.innerHTML = `
                <h3>üë®‚Äçüíº ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö</h3>
                <p>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</p>
            `;
            document.getElementById('btn-admin').classList.remove('hidden');
            document.getElementById('btn-subjects').classList.add('hidden');
            document.getElementById('btn-profile').classList.add('hidden');
        } else {
            userInfoDiv.innerHTML = `
                <h3>üë§ ${user.prefix}${user.firstName} ${user.lastName}</h3>
                <p><strong>‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:</strong> ${user.id}</p>
                <p><strong>‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:</strong> ${user.school}</p>
                <p><strong>‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</strong> ${user.email}</p>
            `;
            document.getElementById('btn-admin').classList.add('hidden');
            document.getElementById('btn-subjects').classList.remove('hidden');
            document.getElementById('btn-profile').classList.remove('hidden');
        }
    }

    /* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ä‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
       - {Array} subjects - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ä‡∏≤
       - {string} studentId - ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
       - {StudentModel} studentModel - Model ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
       - {SubjectModel} subjectModel - Model ‡∏ß‡∏¥‡∏ä‡∏≤
    */

    showSubjects(subjects, studentId, studentModel, subjectModel) {
        this.hideAllViews();
        document.getElementById('subject-registration').classList.remove('hidden');

        const subjectsList = document.getElementById('subjects-list');
        subjectsList.innerHTML = '';

        subjects.forEach(subject => {
            const enrollmentCheck = subjectModel.canEnroll(subject.id, studentId, studentModel);

            const subjectCard = document.createElement('div');
            subjectCard.className = 'subject-card';

            let statusBadge = '';
            let enrollButton = '';

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á Status Badge
            if (subject.maxStudents === -1) {
                statusBadge = '<span class="status-badge status-unlimited">‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</span>';
            } else if (subject.currentEnrolled >= subject.maxStudents) {
                statusBadge = '<span class="status-badge status-full">‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß</span>';
            } else {
                statusBadge = `<span class="status-badge status-available">‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á ${subject.maxStudents - subject.currentEnrolled} ‡∏ó‡∏µ‡πà</span>`;
            }

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
            if (enrollmentCheck.canEnroll) {
                enrollButton = `<button onclick="app.controller.enrollSubject('${subject.id}')">‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</button>`;
            } else {
                enrollButton = `<button disabled>‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ</button>`;
            }

            // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ä‡∏≤‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏Å‡πà‡∏≠‡∏ô
            const prerequisiteInfo = subject.prerequisite ?
                `<div class="prerequisite-info">üìã ‡∏ß‡∏¥‡∏ä‡∏≤‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏Å‡πà‡∏≠‡∏ô: ${subjectModel.getSubject(subject.prerequisite)?.name || subject.prerequisite}</div>` : '';

            subjectCard.innerHTML = `
                <div class="subject-code">${subject.id}</div>
                <div class="subject-name">${subject.name}</div>
                <div class="subject-info">
                    üë®‚Äçüè´ ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå: ${subject.instructor}<br>
                    üìö ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï: ${subject.credits}<br>
                    üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô: ${subject.currentEnrolled}${subject.maxStudents !== -1 ? '/' + subject.maxStudents : ''}
                </div>
                ${prerequisiteInfo}
                ${statusBadge}
                <div style="margin-top: 15px;">
                    <button onclick="app.controller.showSubjectDetail('${subject.id}')">‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</button>
                    ${enrollButton}
                </div>
                ${!enrollmentCheck.canEnroll ? `<div style="color: #dc3545; margin-top: 10px; font-size: 14px;">‚ùå ${enrollmentCheck.reason}</div>` : ''}
            `;

            subjectsList.appendChild(subjectCard);
        });
    }

    /* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ß‡∏¥‡∏ä‡∏≤
      - {Object} subject - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ä‡∏≤
      - {string} studentId - ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
      - {StudentModel} studentModel - Model ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
      - {SubjectModel} subjectModel - Model ‡∏ß‡∏¥‡∏ä‡∏≤
    */

    showSubjectDetail(subject, studentId, studentModel, subjectModel) {
        this.hideAllViews();
        document.getElementById('subject-detail').classList.remove('hidden');

        const enrollmentCheck = subjectModel.canEnroll(subject.id, studentId, studentModel);

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô
        let statusInfo = '';
        if (subject.maxStudents === -1) {
            statusInfo = `
                <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î:</strong> ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î</p>
                <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</strong> ${subject.currentEnrolled} ‡∏Ñ‡∏ô</p>
            `;
        } else {
            statusInfo = `
                <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î:</strong> ${subject.maxStudents} ‡∏Ñ‡∏ô</p>
                <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</strong> ${subject.currentEnrolled} ‡∏Ñ‡∏ô</p>
                <p><strong>‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏ß‡πà‡∏≤‡∏á:</strong> ${subject.maxStudents - subject.currentEnrolled} ‡∏Ñ‡∏ô</p>
            `;
        }

        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ä‡∏≤‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏Å‡πà‡∏≠‡∏ô
        const prerequisiteInfo = subject.prerequisite ?
            `<p><strong>‡∏ß‡∏¥‡∏ä‡∏≤‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏Å‡πà‡∏≠‡∏ô:</strong> ${subjectModel.getSubject(subject.prerequisite)?.name || subject.prerequisite}</p>` :
            '<p><strong>‡∏ß‡∏¥‡∏ä‡∏≤‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏Å‡πà‡∏≠‡∏ô:</strong> ‡πÑ‡∏°‡πà‡∏°‡∏µ</p>';

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
        let enrollButton = '';
        if (enrollmentCheck.canEnroll) {
            enrollButton = `<button onclick="app.controller.enrollSubject('${subject.id}')">‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡∏ô‡∏µ‡πâ</button>`;
        } else {
            enrollButton = `<button disabled>‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ</button>`;
        }

        document.getElementById('subject-detail-content').innerHTML = `
            <div class="subject-card">
                <h3>${subject.id} - ${subject.name}</h3>
                <p><strong>‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô:</strong> ${subject.instructor}</p>
                <p><strong>‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï:</strong> ${subject.credits}</p>
                ${prerequisiteInfo}
                ${statusInfo}
                <div style="margin-top: 20px;">
                    <button onclick="app.controller.showSubjectRegistration()">‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</button>
                    ${enrollButton}
                </div>
                ${!enrollmentCheck.canEnroll ? `<div style="color: #dc3545; margin-top: 10px;">‚ùå ${enrollmentCheck.reason}</div>` : ''}
            </div>
        `;
    }

    /* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
       - {Object} student - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
       - {Array} registrations - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
       - {Array} subjects - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
       - {SubjectModel} subjectModel - Model ‡∏ß‡∏¥‡∏ä‡∏≤
       - {StudentModel} studentModel - Model ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
    */

    showStudentProfile(student, registrations, subjects, subjectModel, studentModel) {
        this.hideAllViews();
        document.getElementById('student-profile').classList.remove('hidden');

        let registeredSubjectsHtml = '';
        let totalCredits = 0;

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
        if (registrations.length > 0) {
            registrations.forEach(subjectId => {
                const subject = subjects.find(s => s.id === subjectId);
                if (subject) {
                    const grade = student.grades[subjectId] || '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏Å‡∏£‡∏î';
                    registeredSubjectsHtml += `
                        <tr>
                            <td>${subject.id}</td>
                            <td>${subject.name}</td>
                            <td>${subject.credits}</td>
                            <td>${subject.instructor}</td>
                            <td>${grade}</td>
                            <td>
                                <button onclick="app.controller.withdrawSubject('${subject.id}')" 
                                        style="background: #dc3545; font-size: 12px; padding: 5px 10px;">
                                    ‡∏ñ‡∏≠‡∏ô
                                </button>
                            </td>
                        </tr>
                    `;
                    totalCredits += subject.credits;
                }
            });
        } else {
            registeredSubjectsHtml = '<tr><td colspan="6" style="text-align: center;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏î‡πÜ</td></tr>';
        }

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏Å‡∏£‡∏î
        let gradesHtml = '';
        if (student.grades && Object.keys(student.grades).length > 0) {
            Object.keys(student.grades).forEach(subjectId => {
                const subject = subjects.find(s => s.id === subjectId);
                if (subject) {
                    gradesHtml += `
                        <tr>
                            <td>${subject.id}</td>
                            <td>${subject.name}</td>
                            <td>${subject.credits}</td>
                            <td>${student.grades[subjectId]}</td>
                        </tr>
                    `;
                }
            });
        } else {
            gradesHtml = '<tr><td colspan="4" style="text-align: center;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏Å‡∏£‡∏î</td></tr>';
        }

        document.getElementById('student-profile-content').innerHTML = `
            <div class="subject-card">
                <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</h3>
                <p><strong>‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:</strong> ${student.id}</p>
                <p><strong>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</strong> ${student.prefix}${student.firstName} ${student.lastName}</p>
                <p><strong>‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î:</strong> ${new Date(student.birthDate).toLocaleDateString('th-TH')}</p>
                <p><strong>‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</strong> ${student.school}</p>
                <p><strong>‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</strong> ${student.email}</p>
                <p><strong>‡∏≠‡∏≤‡∏¢‡∏∏:</strong> ${this.calculateAge(student.birthDate)} ‡∏õ‡∏µ</p>
            </div>

            <div class="subject-card">
                <h3>‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡πÄ‡∏ó‡∏≠‡∏°‡∏ô‡∏µ‡πâ</h3>
                <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï‡∏£‡∏ß‡∏°:</strong> ${totalCredits} ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï</p>
                <table>
                    <thead>
                        <tr>
                            <th>‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤</th>
                            <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤</th>
                            <th>‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï</th>
                            <th>‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</th>
                            <th>‡πÄ‡∏Å‡∏£‡∏î</th>
                            <th>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${registeredSubjectsHtml}
                    </tbody>
                </table>
            </div>

            <div class="subject-card">
                <h3>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏Å‡∏£‡∏î</h3>
                <table>
                    <thead>
                        <tr>
                            <th>‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤</th>
                            <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤</th>
                            <th>‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï</th>
                            <th>‡πÄ‡∏Å‡∏£‡∏î</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${gradesHtml}
                    </tbody>
                </table>
            </div>
        `;
    }

    /* ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
       - {Array} students - ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
       - {Array} subjects - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
       - {StudentModel} studentModel - Model ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
       - {SubjectModel} subjectModel - Model ‡∏ß‡∏¥‡∏ä‡∏≤
    */

    showAdminPanel(students, subjects, studentModel, subjectModel) {
        this.hideAllViews();
        document.getElementById('admin-panel').classList.remove('hidden');

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
        let studentsListHtml = '';
        students.forEach(student => {
            const registrations = studentModel.getStudentRegistrations(student.id);
            const registeredSubjects = registrations.map(subjectId => {
                const subject = subjects.find(s => s.id === subjectId);
                return subject ? subject.name : subjectId;
            }).join(', ') || '‡πÑ‡∏°‡πà‡∏°‡∏µ';

            studentsListHtml += `
                <tr>
                    <td>${student.id}</td>
                    <td>${student.prefix}${student.firstName} ${student.lastName}</td>
                    <td>${student.school}</td>
                    <td>${registrations.length}</td>
                    <td style="font-size: 12px;">${registeredSubjects}</td>
                </tr>
            `;
        });

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ß‡∏¥‡∏ä‡∏≤
        let subjectsListHtml = '';
        subjects.forEach(subject => {
            subjectsListHtml += `
                <tr>
                    <td>${subject.id}</td>
                    <td>${subject.name}</td>
                    <td>${subject.credits}</td>
                    <td>${subject.instructor}</td>
                    <td>${subject.currentEnrolled}</td>
                    <td>${subject.maxStudents === -1 ? '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î' : subject.maxStudents}</td>
                </tr>
            `;
        });

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏£‡∏î
        let gradeManagementHtml = '';
        students.forEach(student => {
            const registrations = studentModel.getStudentRegistrations(student.id);
            registrations.forEach(subjectId => {
                const subject = subjects.find(s => s.id === subjectId);
                if (subject) {
                    const currentGrade = student.grades[subjectId] || '';
                    gradeManagementHtml += `
                        <tr>
                            <td>${student.id}</td>
                            <td>${student.firstName} ${student.lastName}</td>
                            <td>${subject.id}</td>
                            <td>${subject.name}</td>
                            <td>
                                <select id="grade-${student.id}-${subject.id}" class="grade-input">
                                    <option value="">-</option>
                                    <option value="A" ${currentGrade === 'A' ? 'selected' : ''}>A</option>
                                    <option value="B+" ${currentGrade === 'B+' ? 'selected' : ''}>B+</option>
                                    <option value="B" ${currentGrade === 'B' ? 'selected' : ''}>B</option>
                                    <option value="C+" ${currentGrade === 'C+' ? 'selected' : ''}>C+</option>
                                    <option value="C" ${currentGrade === 'C' ? 'selected' : ''}>C</option>
                                    <option value="D+" ${currentGrade === 'D+' ? 'selected' : ''}>D+</option>
                                    <option value="D" ${currentGrade === 'D' ? 'selected' : ''}>D</option>
                                    <option value="F" ${currentGrade === 'F' ? 'selected' : ''}>F</option>
                                </select>
                                <button onclick="app.controller.updateGrade('${student.id}', '${subject.id}')" 
                                        style="margin-left: 5px; font-size: 12px; padding: 5px 10px;">
                                    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                                </button>
                            </td>
                        </tr>
                    `;
                }
            });
        });

        if (!gradeManagementHtml) {
            gradeManagementHtml = '<tr><td colspan="5" style="text-align: center;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö</td></tr>';
        }

        document.getElementById('admin-content').innerHTML = `
            <div class="subject-card">
                <h3>‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h3>
                <table>
                    <thead>
                        <tr>
                            <th>‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</th>
                            <th>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</th>
                            <th>‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</th>
                            <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</th>
                            <th>‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${studentsListHtml}
                    </tbody>
                </table>
            </div>

            <div class="subject-card">
                <h3>‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤</h3>
                <table>
                    <thead>
                        <tr>
                            <th>‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤</th>
                            <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤</th>
                            <th>‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï</th>
                            <th>‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</th>
                            <th>‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß</th>
                            <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${subjectsListHtml}
                    </tbody>
                </table>
            </div>

            <div class="subject-card">
                <h3>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏£‡∏î</h3>
                <table>
                    <thead>
                        <tr>
                            <th>‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</th>
                            <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</th>
                            <th>‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤</th>
                            <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤</th>
                            <th>‡πÄ‡∏Å‡∏£‡∏î</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${gradeManagementHtml}
                    </tbody>
                </table>
            </div>
        `;
    }

    // ‡∏ã‡πà‡∏≠‡∏ô View ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î //
    hideAllViews() {
        document.getElementById('subject-registration').classList.add('hidden');
        document.getElementById('subject-detail').classList.add('hidden');
        document.getElementById('student-profile').classList.add('hidden');
        document.getElementById('admin-panel').classList.add('hidden');
    }

    /* ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏≤‡∏¢‡∏∏‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î
       - {string} birthDate - ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö YYYY-MM-DD
       - {number} - ‡∏≠‡∏≤‡∏¢‡∏∏‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏µ
    */

    calculateAge(birthDate) {
        const birth = new Date(birthDate);
        const today = new Date();
        let age = today.getFullYear() - birth.getFullYear();
        const monthDiff = today.getMonth() - birth.getMonth();

        if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {
            age--;
        }
        return age;
    }

    // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
    clearLoginMessage() {
        document.getElementById('login-message').innerHTML = '';
    }

    /* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
       - {string} message - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
    */

    showLoginError(message) {
        document.getElementById('login-message').innerHTML = `
            <div class="alert alert-error" style="margin-top: 10px;">${message}</div>
        `;
    }

    /* ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô UI
       - {string} subjectId - ‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤
       - {number} currentEnrolled - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
       - {number} maxStudents - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
    */

    updateEnrollmentCount(subjectId, currentEnrolled, maxStudents) {
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó UI ‡∏ï‡∏£‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó UI ‡πÅ‡∏ö‡∏ö real-time
        const elements = document.querySelectorAll(`[data-subject-id="${subjectId}"]`);
        elements.forEach(element => {
            const enrollmentText = maxStudents === -1 ?
                `‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô: ${currentEnrolled}` :
                `‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô: ${currentEnrolled}/${maxStudents}`;

            const enrollmentSpan = element.querySelector('.enrollment-count');
            if (enrollmentSpan) {
                enrollmentSpan.textContent = enrollmentText;
            }
        });
    }

    /* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
       - {string} message - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
       - {boolean} - ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
    */

    showConfirmation(message) {
        return confirm(message);
    }

    /* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î
       - {boolean} show - ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ã‡πà‡∏≠‡∏ô
     */

    showLoading(show = true) {
        // ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° loading spinner ‡πÑ‡∏î‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
        if (show) {
            document.body.style.cursor = 'wait';
        } else {
            document.body.style.cursor = 'default';
        }
    }

    /* ‡πÄ‡∏ô‡πâ‡∏ô‡∏™‡∏µ element ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó
       - {string} elementId - ID ‡∏Ç‡∏≠‡∏á element
     */

    highlightUpdatedElement(elementId) {
        const element = document.getElementById(elementId);
        if (element) {
            element.style.backgroundColor = '#fff3cd';
            setTimeout(() => {
                element.style.backgroundColor = '';
            }, 2000);
        }
    }

    /* ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Status Badge
       - {Object} subject - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ä‡∏≤
       - {string} - HTML ‡∏Ç‡∏≠‡∏á Status Badge
    */

    createStatusBadge(subject) {
        if (subject.maxStudents === -1) {
            return '<span class="status-badge status-unlimited">‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</span>';
        } else if (subject.currentEnrolled >= subject.maxStudents) {
            return '<span class="status-badge status-full">‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß</span>';
        } else {
            return `<span class="status-badge status-available">‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á ${subject.maxStudents - subject.currentEnrolled} ‡∏ó‡∏µ‡πà</span>`;
        }
    }

    /* ‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ó‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
       - {string} dateString - ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö YYYY-MM-DD
       - {string} - ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
     */

    formatThaiDate(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('th-TH', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
    }
}